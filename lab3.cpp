#include <stdio.h>
#include <locale.h>
	

/*Ввести с консоли строку символов произвольной длины (до 80 символов).
Поменять в ней все маленькие символы ‘a’ и ‘b’ на заглавные и вывести на консоль полученную строку.

1) Ввести символы с консоли в массив символов (строку)
2) Через цикл for проверить каждый элемент на массива на a или b и заменить на соответствующие большие буквы

Объявить массив данных типа int размером 3 на 3. Ввести с консоли его значения, вывести на консоль
сумму его элементов, расположенных на главной диагонали и сумму элементов, расположенных на 
побочной диагонали. Проверить, является ли матрица «магическим квадратом» (в «магическом квадрате» 
суммы элементов по вертикали, горизонтали и диагонали равны).

1) Объявить целочисленный массив 3 на 3
2) Ввести и вывести элементы через цикл for
3) Вычислить поочередно суммый элементов по вертикали, горизонтали и диагонали
4) Проверить их равенство и через условие if вывести "Квадрат магический" или "Квадрат не магический"

В программе должна быть предусмотрена возможность работы с матрицами любого размера.
Продумать алгоритм вычисления суммы линий до определенного числа*/

#define MAX 81		/*определяем максимальный размер строки константой (81 так как последний
					символ нулевой и обозначает конец строки)*/



	int main() {
		setlocale(LC_ALL, "Rus");
		
		int i;
		char simv[MAX];								//объявляем массив символов
		printf("Введите строку\n");
		
		fgets(simv, MAX, stdin);					//с консоли вводим символы до 80 штук
		printf("Начальная строка %s\n", simv); 
		
		
		for(i=0; i<MAX; i++) {						//цикл для проверки каждого символа строки
			if (simv[i] == 'a') {
				simv[i] = 'A';						//проверяем если элемент массива - это a, то меняем на A
				} 
				else if (simv[i] == 'b') {
				simv[i] = 'B';						//если данный элемент не символ а, то проверяем таким же образом на b
				}
		}
		
		printf("Полученная строка %s\n", simv);
		
		
		int r; 										//Размерность квадрата
		printf("Введите размерность квадрата\n");
		scanf("%d", &r);
		
		int kvad[r][r];								//Объявляем массив размером заданным выше
		int j,k;
		
		printf("Введите элементы массива (квадрата)\n");
		
		for(j=0; j<r; j++) {
			for(k=0; k<r; k++) {
				scanf("%d", &kvad[j][k]);			//Вводим с консоли элементы массива через цикл
			}	
		}
		
		for(j=0; j<r; j++) {
			for(k=0; k<r; k++) {
				printf("%d ", kvad[j][k]);			//Выводим элементы массива через цикл
			}	
			printf("\n");
		}
		
		int m=0, n=0;
		int vert = 0, gor = 0, diag = 0;
		
		while (n<r) {
			vert+=kvad[m][n];						//находим сумму элементов по вертикали
			n++;
		}
		m=0;
		n=0;
		
		while (n<r) {
			diag+=kvad[m][n];						//находим сумму элементов по диагонали
			n++;
			m++;
		}
		m=0;
		n=0;
		
		while (m<r) {
			gor+=kvad[m][n];						//находим сумму элементов по горизонтали
			m++;
		}
		
		
		if (vert==diag==gor) {
			printf("Квадрат является магическим так как\n");
			printf("Сумма элементов по вертикали = %d\n", vert);
			printf("Сумма элементов по диагонали = %d\n", diag);
			printf("Сумма элементов по горизонтали = %d\n", gor);
		} 		else { 
				printf("Квадрат НЕ является магическим так как\n");
				printf("Сумма элементов по вертикали = %d\n", vert);
				printf("Сумма элементов по диагонали = %d\n", diag);
				printf("Сумма элементов по горизонтали = %d\n", gor);	
			
				} 
	
		
	}
		
	


